#pragma once

struct Segment {
	unsigned int palette, collection, x, y, width;

	bool operator==(const Segment& other) const {
		return palette == other.palette && collection == other.collection && x == other.x && y == other.y && width == other.width;
	}
};

const unsigned short widths[24] = { 52, 148, 245, 342, 437, 534, 583, 630, 679, 727, 774, 774, 775, 775, 727, 678, 631, 581, 534,
438, 341, 245, 149, 52 };

const Segment segments[138] = {
	{ 0, 0, 0, 0, 13 },
	{ 0, 1, 52, 0, 37 },
	{ 0, 2, 200, 0, 62 },
	{ 0, 3, 445, 0, 64 },
	{ 0, 3, 512, 0, 22 },
	{ 1, 0, 13, 0, 13 },
	{ 1, 1, 89, 0, 37 },
	{ 1, 2, 262, 0, 61 },
	{ 1, 3, 534, 0, 85 },
	{ 2, 0, 26, 0, 13 },
	{ 2, 1, 126, 0, 37 },
	{ 2, 2, 323, 0, 61 },
	{ 2, 3, 619, 0, 85 },
	{ 3, 0, 39, 0, 13 },
	{ 3, 1, 163, 0, 37 },
	{ 3, 2, 384, 0, 61 },
	{ 3, 3, 704, 0, 64 },
	{ 3, 3, 0, 16, 22 },
	{ 4, 4, 22, 16, 109 },
	{ 4, 5, 465, 16, 45 },
	{ 4, 5, 512, 16, 89 },
	{ 4, 6, 233, 32, 13 },
	{ 4, 6, 256, 32, 133 },
	{ 4, 7, 61, 48, 157 },
	{ 5, 4, 131, 16, 109 },
	{ 5, 5, 601, 16, 133 },
	{ 5, 6, 389, 32, 121 },
	{ 5, 6, 512, 32, 25 },
	{ 5, 7, 218, 48, 27 },
	{ 5, 7, 256, 48, 131 },
	{ 6, 4, 240, 16, 10 },
	{ 6, 4, 256, 16, 100 },
	{ 6, 5, 734, 16, 34 },
	{ 6, 5, 0, 32, 100 },
	{ 6, 6, 537, 32, 145 },
	{ 6, 7, 387, 48, 118 },
	{ 6, 7, 512, 48, 40 },
	{ 7, 4, 356, 16, 109 },
	{ 7, 5, 100, 32, 133 },
	{ 7, 6, 682, 32, 85 },
	{ 7, 6, 0, 48, 61 },
	{ 7, 7, 552, 48, 157 },
	{ 8, 8, 709, 48, 57 },
	{ 8, 8, 0, 64, 113 },
	{ 8, 9, 625, 64, 136 },
	{ 8, 9, 0, 80, 46 },
	{ 8, 10, 618, 80, 145 },
	{ 8, 10, 0, 96, 49 },
	{ 8, 11, 657, 96, 97 },
	{ 8, 11, 0, 112, 97 },
	{ 9, 8, 113, 64, 141 },
	{ 9, 8, 256, 64, 29 },
	{ 9, 9, 46, 80, 181 },
	{ 9, 10, 49, 96, 193 },
	{ 9, 11, 97, 112, 145 },
	{ 9, 11, 256, 112, 49 },
	{ 10, 8, 285, 64, 169 },
	{ 10, 9, 227, 80, 16 },
	{ 10, 9, 256, 80, 166 },
	{ 10, 10, 256, 96, 193 },
	{ 10, 11, 305, 112, 193 },
	{ 11, 8, 454, 64, 57 },
	{ 11, 8, 512, 64, 113 },
	{ 11, 9, 422, 80, 76 },
	{ 11, 9, 512, 80, 106 },
	{ 11, 10, 449, 96, 49 },
	{ 11, 10, 512, 96, 145 },
	{ 11, 11, 512, 112, 193 },
	{ 12, 12, 705, 112, 49 },
	{ 12, 12, 0, 128, 145 },
	{ 12, 13, 0, 144, 193 },
	{ 12, 14, 49, 160, 181 },
	{ 12, 15, 46, 176, 169 },
	{ 13, 12, 145, 128, 97 },
	{ 13, 12, 256, 128, 97 },
	{ 13, 13, 193, 144, 49 },
	{ 13, 13, 256, 144, 145 },
	{ 13, 14, 230, 160, 16 },
	{ 13, 14, 256, 160, 166 },
	{ 13, 15, 215, 176, 29 },
	{ 13, 15, 256, 176, 141 },
	{ 14, 12, 353, 128, 145 },
	{ 14, 12, 512, 128, 49 },
	{ 14, 13, 401, 144, 97 },
	{ 14, 13, 512, 144, 97 },
	{ 14, 14, 422, 160, 76 },
	{ 14, 14, 512, 160, 106 },
	{ 14, 15, 397, 176, 113 },
	{ 14, 15, 512, 176, 57 },
	{ 15, 12, 561, 128, 193 },
	{ 15, 13, 609, 144, 145 },
	{ 15, 13, 0, 160, 49 },
	{ 15, 14, 618, 160, 136 },
	{ 15, 14, 0, 176, 46 },
	{ 15, 15, 569, 176, 169 },
	{ 16, 16, 738, 176, 27 },
	{ 16, 16, 0, 192, 131 },
	{ 16, 17, 617, 192, 145 },
	{ 16, 18, 438, 208, 67 },
	{ 16, 18, 512, 208, 67 },
	{ 16, 19, 211, 224, 37 },
	{ 16, 19, 256, 224, 73 },
	{ 17, 16, 131, 192, 118 },
	{ 17, 16, 256, 192, 40 },
	{ 17, 17, 0, 208, 145 },
	{ 17, 18, 579, 208, 133 },
	{ 17, 19, 329, 224, 109 },
	{ 18, 16, 296, 192, 157 },
	{ 18, 17, 145, 208, 109 },
	{ 18, 17, 256, 208, 37 },
	{ 18, 18, 712, 208, 56 },
	{ 18, 18, 0, 224, 78 },
	{ 18, 19, 438, 224, 73 },
	{ 18, 19, 512, 224, 37 },
	{ 19, 16, 453, 192, 53 },
	{ 19, 16, 512, 192, 105 },
	{ 19, 17, 293, 208, 145 },
	{ 19, 18, 78, 224, 133 },
	{ 19, 19, 549, 224, 109 },
	{ 20, 20, 658, 224, 85 },
	{ 20, 21, 234, 240, 21 },
	{ 20, 21, 256, 240, 41 },
	{ 20, 22, 480, 240, 31 },
	{ 20, 22, 512, 240, 7 },
	{ 20, 23, 630, 240, 13 },
	{ 21, 20, 743, 224, 22 },
	{ 21, 20, 0, 240, 64 },
	{ 21, 21, 297, 240, 61 },
	{ 21, 22, 519, 240, 37 },
	{ 21, 23, 643, 240, 13 },
	{ 22, 20, 64, 240, 85 },
	{ 22, 21, 358, 240, 61 },
	{ 22, 22, 556, 240, 37 },
	{ 22, 23, 656, 240, 13 },
	{ 23, 20, 149, 240, 85 },
	{ 23, 21, 419, 240, 61 },
	{ 23, 22, 593, 240, 37 },
	{ 23, 23, 669, 240, 13 }
};